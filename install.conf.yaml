- clean: ['~']

# work specific files
- link:
    ~/.Brewfile:
        if: '[[ $(hostname) == *"linkedin.biz"* ]]'
        path: ${HOME}/.dotfiles_work/Brewfile
        relink: true
    ~/.ssh/config.custom:
        if: '[[ $(hostname) == *"linkedin.biz"* ]]'
        path: ${HOME}/.dotfiles_work/ssh_config.custom
        create: true
    ~/.gitconfig:
        if: '[[ $(hostname) == *"linkedin.biz"* ]]'
        path: ${HOME}/.dotfiles_work/gitconfig
    ~/scripts:
        if: '[[ $(hostname) == *"linkedin.biz"* ]]'
        path: ${HOME}/.dotfiles_work/scripts/
        create: true
    ~/bitbar:
        if: '[[ $(hostname) == *"linkedin.biz"* ]]'
        path: ${HOME}/.dotfiles_work/bitbar/
        create: true
    ~/bin_li:
        if: '[[ $(hostname) == *"linkedin.biz"* ]]'
        path: ${HOME}/.dotfiles_work/bin_li
        create: true

# NAS specific files
- link:
    ~/docker-compose.yml:
        if: '[[ $(hostname) == *"ShitHolder2"* ]]'
        path: ${HOME}/.dotfiles_personal/docker-compose.yml
        relink: true

# home or shared files
- link:
    ~/.bash_profile: bash_profile
    ~/.bashrc: bashrc
    ~/.profile: profile
    ~/.gitconfig:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: gitconfig
    ~/.gitignore_global: gitignore_global
    ~/.vimrc: vimrc
    ~/.ideavimrc: ideavimrc
    ~/.Brewfile:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: Brewfile
        relink: true
    ~/.fzf.bash: fzf.bash
    ~/.tmux.conf: tmux.conf
    ~/.skhdrc: skhdrc
    ~/.yabairc: yabairc
    ~/.inputrc: inputrc
    ~/.editrc: editrc
    ~/.Xmodmap: Xmodmap
    ~/scripts:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: scripts/
        create: true
    ~/.vim:
        path: vim/
        create: true
    ~/.ssh/config:
        # ssh_config at work is managed automatically
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: ssh_config
        create: true
    ~/.bash-git-prompt:
        path: bash-git-prompt/
        create: true
    ~/.gnupg/scdaemon.conf:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: gnupg/scdaemon.conf
        create: true
    ~/.gnupg/gpg.conf:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: gnupg/gpg.conf
        create: true
    ~/.gnupg/gpg-agent.conf:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: gnupg/gpg-agent.conf
        create: true
#    ~/.vim/colors/solarized.vim:
#        path: solarized/vim-colors-solarized/colors/solarized.vim
#        create: true
#        force: true
    ~/bin:
        path: bin/
        create: true
    ~/.config/nvim:
        path: config/nvim
        create: true
    ~/.config/deluge/hostlist.conf.1.2:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: config/deluge/hostlist.conf.1.2
        create: true
    ~/.config/deluge/core.conf:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: config/deluge/core.conf
        create: true
    ~/Library/Application Support/Code/User/settings.json:
        path: vscode-settings.json
        create: true
    ~/bitbar:
        if: '[[ $(hostname) != *"linkedin.biz"* ]]'
        path: bitbar/
        create: true

- shell:
    # - this might not be needed, remove after confirming
    #     description:    "Installing submodules"
    #     command:        "git submodule update --init --recursive"
    #     stdout:         true
    #     stderr:         true
    #     stdin:          true
    -
        description:    "Updating/installing submodules"
        command:        "git submodule update --init --remote --recursive --merge"
        stdout:         true
        stderr:         true
        stdin:          true
    -
        description:    "Updating work specific repo"
        command:        'if [[ $(hostname) == *"linkedin.biz"* ]]; then cd ~/.dotfiles_work/ && git pull && cd -; fi'
        stdout:         true
        stderr:         true
        stdin:          true
    -
        description:    "Installing fzf binary"
        command:        "./fzf/install --bin"
        stdout:         true
        stderr:         true
        stdin:          true
    #    -
    #        description:    "Installing packages via 'brew bundle --global'.  Run 'brew bundle dump --describe --force --global' to update with currently installed packages."
    #        command:        "brew bundle --global || { echo 'Homebrew not installed, this is probably linux'; }"
    #        stdout:         true
    #        stderr:         true
    #        stdin:          true
    -
        description:    "Upgrading installed packages via brew upgrade"
        command:        "brew upgrade"
        stdout:         true
        stderr:         true
        stdin:          true
    -
        description:    "Upgrading installed packages via brew cask upgrade"
        command:        "brew cask upgrade"
        stdout:         true
        stderr:         true
        stdin:          true
    -
        description:    "Upgrading installed packages via mas upgrade"
        command:        "mas upgrade"
        stdout:         true
        stderr:         true
        stdin:          true
    -
        description:    "Installing vim plugins"
        command:        "nvim +PluginInstall +qall"
        stdout:         true
        stderr:         true
        stdin:          true
