{"name":"linter-js-standard","main":"./lib/init.js","activationCommands":[],"version":"3.2.1","description":"Linter plugin for JavaScript Standard Style","keywords":["javascript","standard","linter"],"author":{"name":"Ricardo Barros","email":"ricardofbarros@hotmail.com"},"repository":{"type":"git","url":"git+https://github.com/ricardofbarros/linter-js-standard.git"},"license":"MIT","engines":{"atom":">0.50.0"},"dependencies":{"atom-package-deps":"^2.0.5","babel-eslint":"^4.1.1","esprima":"^2.4.1","esprima-fb":"^15001.1.0-dev-harmony-fb","find-root":"^0.1.1","happiness":"1.0.7","loophole":"^1.1.0","minimatch":"^2.0.8","pkg-config":"^1.1.0","q":"^1.4.1","semistandard":"7.0.2","standard":"5.2.1"},"devDependencies":{"standard":"^5.2.1"},"standard":{"globals":["atom"]},"package-deps":["linter"],"providedServices":{"linter":{"versions":{"1.0.0":"provideLinter"}}},"readme":"linter-js-standard\n=========================\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\nThis plugin for [Linter](https://github.com/AtomLinter/Linter) provides an interface for error/warning messages from [standard](https://github.com/feross/standard), [semistandard](https://github.com/Flet/semistandard) or [happiness](https://github.com/JedWatson/happiness).\n\n![demo](https://cloud.githubusercontent.com/assets/6867996/8457085/4bd7575e-2007-11e5-9762-e3f942b78232.gif)\n\n## Installation\nLinter package must be installed in order to use this plugin. If Linter is not installed, please follow the instructions [here](https://github.com/AtomLinter/Linter).\n\n### Plugin installation\n```\n$ apm install linter-js-standard\n```\n\n## Features\n- Support `standard`, `semistandard` and `happiness` styles.\n- Support ignore glob patterns in package.json.\n- Support custom parsers in package.json.\n- Support global variables in package.json _(supported by standard and semistandard)_\n- Support fenced code lint in markdown files\n\nCustom parsers currently supported:\n- esprima\n- esprima-fb\n- babel-eslint\n\n> Note: If a custom parser is missing from this list please make a PR by adding the missing parser to package.json dependencies.\n\n## Settings\n\n### checkStyleDevDependencies (default: false)\nCheck code style in package.json `devDependencies`. If a valid style is not found it won't lint.\n\n> Note: This will use the nearest package.json.\n\n### honorStyleSettings (default: true)\nHonors style settings defined in package.json.\n\nCurrent style settings supported:\n- `ignore`\n- `parser`\n\n> Note: This will use the nearest package.json.\n\n### style (default: standard)\nSwitch between standard and semistandard styles.\nIf `checkStyleDevDependencies` is true this setting will be **ignored**.\n\n### showEslintRules (default: false)\nEnable/disable showing the id of the offended eslint rules.\n\nExample of messages while showEslintRules is:\n- **true:** Extra semicolon. (semi)\n- **false:** Extra semicolon.\n\n### lintMarkdownFiles (default: false)\nLint markdown fenced code blocks.\n\n## License\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/ricardofbarros/linter-js-standard/issues"},"homepage":"https://github.com/ricardofbarros/linter-js-standard#readme","_id":"linter-js-standard@3.2.1","_shasum":"38e4e6598016c60248b860103098ce30e0a50e06","_resolved":"file:../d-115912-5094-1aob0v0/package.tgz","_from":"../d-115912-5094-1aob0v0/package.tgz"}