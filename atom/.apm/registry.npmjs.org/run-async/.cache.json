{"_id":"run-async","_rev":"3-6e1af33624326e1119d1e3356803558e","name":"run-async","description":"Utility method to run function either synchronously or asynchronously using the common `this.async()` style.","dist-tags":{"latest":"0.1.0"},"versions":{"0.1.0":{"name":"run-async","version":"0.1.0","description":"Utility method to run function either synchronously or asynchronously using the common `this.async()` style.","main":"index.js","scripts":{"test":"mocha -R spec"},"repository":{"type":"git","url":"git://github.com/SBoudrias/run-async"},"keywords":["flow","flow-control","async"],"author":{"name":"Simon Boudrias","email":"admin@simonboudrias.com"},"license":"MIT","bugs":{"url":"https://github.com/SBoudrias/run-async/issues"},"homepage":"https://github.com/SBoudrias/run-async","dependencies":{"once":"^1.3.0"},"devDependencies":{"mocha":"^1.21.4"},"_id":"run-async@0.1.0","dist":{"shasum":"c8ad4a5e110661e402a7d21b530e009f25f8e389","tarball":"http://registry.npmjs.org/run-async/-/run-async-0.1.0.tgz"},"_from":".","_npmVersion":"1.4.6","_npmUser":{"name":"sboudrias","email":"admin@simonboudrias.com"},"maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"directories":{}}},"readme":"Run Async\n=========\n\n[![npm](https://badge.fury.io/js/run-async.svg)](http://badge.fury.io/js/run-async) [![tests](https://travis-ci.org/SBoudrias/run-async.svg?branch=master)](http://travis-ci.org/SBoudrias/run-async) [![dependencies](https://david-dm.org/SBoudrias/run-async.svg?theme=shields.io)](https://david-dm.org/SBoudrias/run-async)\n\nUtility method to run function either synchronously or asynchronously using the common `this.async()` style.\n\nThis is useful for library author accepting sync or async functions as parameter. `runAsync` will always run them as async method, and normalize the function handling.\n\nInstallation\n=========\n\n```bash\nnpm install --save run-async\n```\n\nUsage\n=========\n\n```js\nvar runAsync = require('run-async');\n\n// In Async mode:\nvar asyncFn = function (a) {\n  var done = this.async();\n\n  setTimeout(function () {\n    done('running: ' + a);\n  }, 10);\n};\n\nrunAsync(asyncFn, function (answer) {\n  console.log(answer); // 'running: async'\n}, 'async');\n\n// In Sync mode:\nvar syncFn = function (a) {\n  return 'running: ' + a;\n};\n\nrunAsync(asyncFn, function (answer) {\n  console.log(answer); // 'running: sync'\n}, 'sync');\n```\n\nLicence\n========\n\nCopyright (c) 2014 Simon Boudrias (twitter: @vaxilart)  \nLicensed under the MIT license.\n","maintainers":[{"name":"sboudrias","email":"admin@simonboudrias.com"}],"time":{"modified":"2014-08-11T01:11:31.399Z","created":"2014-08-11T01:11:31.399Z","0.1.0":"2014-08-11T01:11:31.399Z"},"homepage":"https://github.com/SBoudrias/run-async","keywords":["flow","flow-control","async"],"repository":{"type":"git","url":"git://github.com/SBoudrias/run-async"},"author":{"name":"Simon Boudrias","email":"admin@simonboudrias.com"},"bugs":{"url":"https://github.com/SBoudrias/run-async/issues"},"license":"MIT","readmeFilename":"README.md","users":{"itonyyo":true},"_attachments":{},"_etag":"\"F379Z5D5I0O8XEJI0KLHY9584\""}