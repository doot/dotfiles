(function() {
  var Stream, fs, jQuery, path, spawn, tmp, _;

  spawn = require('child_process').spawn;

  Stream = require('stream');

  jQuery = require('jquery');

  _ = require('lodash');

  tmp = require('tmp');

  fs = require('fs');

  path = require('path');

  module.exports = {
    compile: function(fpath, text, cmd, options) {
      var dfd, ls, stream;
      if (options == null) {
        options = ['-s'];
      }
      dfd = new jQuery.Deferred();
      if (process.platform.slice(0, 3) === 'win') {
        cmd = "" + cmd + ".bat";
      }
      stream = new Stream();
      stream.pipe = function(dest) {
        console.log(text);
        dest.write(text);
        return dest.end();
      };
      ls = spawn(cmd, options);
      ls.stderr.on('data', function(err) {
        return dfd.reject(err.toString());
      });
      ls.stdout.on('data', function(code) {
        return dfd.resolve(code.toString());
      });
      stream.pipe(ls.stdin);
      return dfd.promise();
    },
    compileFile: function(fpath, text, cmd, options) {
      var dfd;
      if (options == null) {
        options = {};
      }
      dfd = new jQuery.Deferred();
      tmp.file(function(err, fwpath, fw) {
        if (err) {
          dfd.reject(new Error(err));
          return;
        }
        return fs.writeFile(fwpath, text, function(err) {
          if (err) {
            dfd.reject(new Error(err));
            return;
          }
          return tmp.file(function(err, frpath, fr) {
            var ls, option;
            if (err) {
              dfd.reject(new Error(err));
              return;
            }
            if (process.platform.slice(0, 3) === 'win') {
              cmd = "" + cmd + ".bat";
            }
            option = [fwpath, frpath].concat(options);
            ls = spawn(cmd, option);
            return ls.on('close', function(code) {
              return fs.readFile(frpath, function(err, data) {
                if (err) {
                  return dfd.reject(err.toString());
                } else {
                  return dfd.resolve(data.toString());
                }
              });
            });
          });
        });
      });
      return dfd.promise();
    }
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2Rvb3QvLmF0b20vcGFja2FnZXMvcHJldmlldy1wbHVzL2xpYi9sYW5nL2NvbW1hbmQuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxNQUFBLHVDQUFBOztBQUFBLEVBQUEsS0FBQSxHQUFRLE9BQUEsQ0FBUSxlQUFSLENBQXdCLENBQUMsS0FBakMsQ0FBQTs7QUFBQSxFQUNBLE1BQUEsR0FBUyxPQUFBLENBQVEsUUFBUixDQURULENBQUE7O0FBQUEsRUFFQSxNQUFBLEdBQVMsT0FBQSxDQUFRLFFBQVIsQ0FGVCxDQUFBOztBQUFBLEVBR0EsQ0FBQSxHQUFJLE9BQUEsQ0FBUSxRQUFSLENBSEosQ0FBQTs7QUFBQSxFQUlBLEdBQUEsR0FBTSxPQUFBLENBQVEsS0FBUixDQUpOLENBQUE7O0FBQUEsRUFLQSxFQUFBLEdBQUssT0FBQSxDQUFRLElBQVIsQ0FMTCxDQUFBOztBQUFBLEVBTUEsSUFBQSxHQUFPLE9BQUEsQ0FBUSxNQUFSLENBTlAsQ0FBQTs7QUFBQSxFQVFBLE1BQU0sQ0FBQyxPQUFQLEdBQ0U7QUFBQSxJQUFBLE9BQUEsRUFBUyxTQUFDLEtBQUQsRUFBTyxJQUFQLEVBQVksR0FBWixFQUFnQixPQUFoQixHQUFBO0FBQ0wsVUFBQSxlQUFBOztRQURxQixVQUFRLENBQUMsSUFBRDtPQUM3QjtBQUFBLE1BQUEsR0FBQSxHQUFVLElBQUEsTUFBTSxDQUFDLFFBQVAsQ0FBQSxDQUFWLENBQUE7QUFDQSxNQUFBLElBQUcsT0FBTyxDQUFDLFFBQVMsWUFBakIsS0FBMEIsS0FBN0I7QUFDRSxRQUFBLEdBQUEsR0FBTSxFQUFBLEdBQUcsR0FBSCxHQUFPLE1BQWIsQ0FERjtPQURBO0FBQUEsTUFHQSxNQUFBLEdBQWEsSUFBQSxNQUFBLENBQUEsQ0FIYixDQUFBO0FBQUEsTUFJQSxNQUFNLENBQUMsSUFBUCxHQUFj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

//# sourceURL=/Users/doot/.atom/packages/preview-plus/lib/lang/command.coffee
